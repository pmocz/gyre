! Module  : constants_m
! Purpose : physical constants & environment variables
!
! Copyright 2013-2025 Rich Townsend & The GYRE Team
!
! This file is part of GYRE. GYRE is free software: you can
! redistribute it and/or modify it under the terms of the GNU General
! Public License as published by the Free Software Foundation, version 3.
!
! GYRE is distributed in the hope that it will be useful, but WITHOUT
! ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
! or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public
! License for more details.
!
! You should have received a copy of the GNU General Public License
! along with this program.  If not, see <http://www.gnu.org/licenses/>.

#:include 'gyre.inc'

module constants_m

   ! Uses

   use forum_m, &
      DEFAULT_G_GRAVITY => G_GRAVITY, &
      DEFAULT_C_LIGHT => C_LIGHT, &
      DEFAULT_SIGMA_STEFAN => SIGMA_STEFAN, &
      DEFAULT_A_RADIATION => A_RADIATION, &
      DEFAULT_GM_SUN => GM_SUN, &
      DEFAULT_M_SUN => M_SUN, &
      DEFAULT_R_SUN => R_SUN, &
      DEFAULT_L_SUN => L_SUN

   use ISO_FORTRAN_ENV

   ! No implicit typing

   implicit none (type, external)

   ! Module variables

   ! Physical constants (cgs)

   real(RD), save, protected :: G_GRAVITY = DEFAULT_G_GRAVITY
   real(RD), save, protected :: C_LIGHT = DEFAULT_C_LIGHT
   real(RD), save, protected :: A_RADIATION = DEFAULT_A_RADIATION

   ! Astronomical constants (cgs)

   real(RD), save, protected :: M_SUN = DEFAULT_M_SUN
   real(RD), save, protected :: R_SUN = DEFAULT_R_SUN
   real(RD), save, protected :: L_SUN = DEFAULT_L_SUN

   ! Lengths

   integer, parameter :: ITEM_LEN = 32

   ! Paths

   character(FILENAME_LEN), save, protected :: GYRE_DIR = ''

   ! Interfaces

   interface set_constant
      module procedure set_constant_r_
      module procedure set_constant_c_
   end interface set_constant

   ! Access specifiers

   public :: G_GRAVITY
   public :: C_LIGHT
   public :: A_RADIATION

   public :: M_SUN
   public :: R_SUN
   public :: L_SUN

   public :: ITEM_LEN
   public :: FILENAME_LEN
   public :: GYRE_DIR

   public :: read_constants
   public :: set_constant

   ! Default access

   private

contains

   subroutine read_constants(unit)

      integer, intent(in) :: unit

      integer                   :: n_cn
      character(:), allocatable :: gyre_dir_
      integer                   :: status

      namelist /constants/ G_GRAVITY, C_LIGHT, A_RADIATION, &
         M_SUN, R_SUN, L_SUN, GYRE_DIR

      ! Count the number of constants namelists

      rewind(unit)

      n_cn = 0

      count_loop : do
         read(unit, NML=constants, END=100)
         n_cn = n_cn + 1
      end do count_loop

100   continue

      @:ASSERT(n_cn == 1, 'Input file should contain exactly one &constants namelist')

      ! Read constants

      call get_env('GYRE_DIR', gyre_dir_, status)
      if (status == 0) GYRE_DIR = gyre_dir_

      rewind(unit)
      read(unit, NML=constants)

      @:ASSERT(GYRE_DIR /= '', 'GYRE_DIR is not set')

      ! Finish

      return

   end subroutine read_constants

   !****

   subroutine set_constant_r_(name, value)

      character(*), intent(in) :: name
      real(RD), intent(in)     :: value

      ! Set the constant

      select case (name)
      case ('G_GRAVITY')
         G_GRAVITY = value
      case ('C_LIGHT')
         C_LIGHT = value
      case ('A_RADIATION')
         A_RADIATION = value
      case ('M_SUN')
         M_SUN = value
      case ('R_SUN')
         R_SUN = value
      case ('L_SUN')
         L_SUN = value
      case default
         @:ABORT('Invalid name')
      end select

      ! Finish

      return

   end subroutine set_constant_r_

   !****

   subroutine set_constant_c_(name, value)

      character(*), intent(in) :: name
      character(*), intent(in) :: value

      ! Set the constant

      select case (name)
      case ('GYRE_DIR')
         GYRE_DIR = value
      case default
         @:ABORT('Invalid name')
      end select

      ! Finish

      return

   end subroutine set_constant_c_

end module constants_m
