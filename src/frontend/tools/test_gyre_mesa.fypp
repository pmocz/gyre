! Program  : test_gyre_mesa
! Purpose  : test libgyre_mesa for memory leaks and other issues
!
! Copyright 2013-2024 Rich Townsend
!
! This file is part of GYRE. GYRE is free software: you can
! redistribute it and/or modify it under the terms of the GNU General
! Public License as published by the Free Software Foundation, version 3.
!
! GYRE is distributed in the hope that it will be useful, but WITHOUT
! ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
! or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public
! License for more details.
!
! You should have received a copy of the GNU General Public License
! along with this program.  If not, see <http://www.gnu.org/licenses/>.

#:include 'gyre.inc'

program test_gyre_mesa

   ! Uses

   use forum_m, only: RD

   use gyre_mesa_m

   use ISO_FORTRAN_ENV

   ! No implicit typing

   implicit none (type, external)

   ! Variables

   real(RD)                      :: rpar(1)
   integer                       :: ipar(1)
   integer                       :: i
   type(scan_par_t), allocatable :: sc_p(:)
   integer                       :: rss

   ! Initialize

   call init('gyre.in')

   call set_constant('GYRE_DIR', '../../..')

   ! Read the model

   call read_model('bcep.mesa')

   ! Repeatedy find modes

   do i = 1,10

      ! Adjust the frequency range

      call get_par(scan_par=sc_p)

      sc_p(1)%freq_min = sc_p(1)%freq_min + 0.5_RD
      sc_p(1)%freq_max = sc_p(1)%freq_max + 0.5_RD

      call set_par(scan_par=sc_p)

      ! Run

      call get_modes(0, user_sub, ipar, rpar)
      call get_modes(1, user_sub, ipar, rpar)
      call get_modes(2, user_sub, ipar, rpar)

      ! Get  print out memory usage

      call EXECUTE_COMMAND_LINE('ps -o comm,rss | grep test_gyre_lib')

      print *,'Iteration:',i

   end do

   ! Finish

contains

   subroutine user_sub (md, ipar, rpar, retcode)

      type(mode_t), intent(in) :: md
      integer, intent(inout)   :: ipar(:)
      real(RD), intent(inout)  :: rpar(:)
      integer, intent(out)     :: retcode

      ! Print out mode data

      print *, md%l, md%n_pg, md%omega

      ! Finish

      retcode = 0

      return

   end subroutine user_sub

end program test_gyre_mesa
